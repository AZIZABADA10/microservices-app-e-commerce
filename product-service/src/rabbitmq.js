// src/rabbitmq.js
const amqp = require('amqplib');

let channel;

async function connectRabbitMQ() {
  try {
    const connection = await amqp.connect(process.env.RABBITMQ_URL || 'amqp://localhost');
    channel = await connection.createChannel();
    console.log('‚úÖ [product-service] Connect√© √† RabbitMQ');

    // D√©clare la queue 'USER_REGISTERED' pour l'√©coute
    await channel.assertQueue('USER_REGISTERED');
    console.log("‚úÖ [product-service] File 'USER_REGISTERED' est pr√™te √† recevoir des messages");

    // Consommer les messages de la file
    channel.consume('USER_REGISTERED', (msg) => {
      if (msg !== null) {
        try {
          const user = JSON.parse(msg.content.toString());
          console.log('üì• [product-service] Message re√ßu:', user);

          // Ajoutez ici la logique m√©tier (par exemple, ajouter un produit de bienvenue)

          // Confirmer la r√©ception du message
          channel.ack(msg);
        } catch (err) {
          console.error('‚ùå Erreur lors du traitement du message:', err);
        }
      }
    });
  } catch (err) {
    console.error('‚ùå [product-service] RabbitMQ connection error:', err);
    setTimeout(connectRabbitMQ, 5000); // Reconnexion apr√®s 5 secondes
  }
}

module.exports = { connectRabbitMQ };
